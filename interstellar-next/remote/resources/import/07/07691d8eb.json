[1,["f1I81iKPdKnLilj96s5cAj","abpJ0oz6NFn6LaNqIbEMa5","b4sPq0XCJOBrCmeCHeMXUb","998fwQpwVI5Z3QCFxicb0d@aeaac"],["_effectAsset","root","node","data","_mesh"],[["cc.Node",["_name","_prefab","_children","_parent","_components"],2,4,2,1,9],["cc.Prefab",["_name"],2],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.MeshRenderer",["node","__prefab","_materials","bakeSettings","_mesh"],3,1,4,3,4,6],["cc.CompPrefabInfo",["fileId"],2],["cc.ModelBakeSettings",[],3],["cc.Mesh",["_native","_hash","_struct"],0],["cc.Material",["_name","_techIdx","_states","_defines","_props"],-1,12],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[2,0,1,2,3,4,5,5],[7,0,1,2,3,4,5],[1,0,2],[0,0,2,1,2],[0,0,3,4,1,2],[3,0,1,2,3,4,1],[4,0,2],[5,1],[6,0,1,2,4],[8,0,1,2,4]],[[[[2,"weiyan"],[3,"weiyan",[-2],[0,"70nnqjvkFfGKFpqGjtVZwP",null,null,null,-1,0]],[4,"weiyan",1,[[5,-3,[6,"e65KNUkhtWVIJg2gPQInkl"],[0,1],[7],2]],[0,"e6HZs+T3lctJxMVdW5XLLA",null,null,null,1,0]]],0,[0,1,1,0,-1,2,0,2,2,0,3,1,3],[0,0,0],[-1,-2,4],[1,2,3]],[[[8,".bin",436648968,{"encoded":true,"compressed":true,"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":16160,"length":1267,"count":1632,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":17428,"length":1267,"count":1632,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":8102,"count":306,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":8112,"length":8045,"count":306,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}],"minPosition":{"x":0.2176842838525772,"y":0.012193084694445133,"z":-0.014885983429849148},"maxPosition":{"x":0.318590372800827,"y":0.041766803711652756,"z":0.014623955823481083}}],-1],0,0,[],[],[]],[[[1,"weiyan02",1,[{"rasterizerState":{"cullMode":0},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{"lightNoiseFlow":16},"mainColorIn",8,[4,4294921533],"mainColorOut",8,[4,4294909696],"colorStep",8,[0,0,1],"lightNoiseTiling",8,[0,3,5],"lightNoiseStep",8,[0,0,1],"coreLightStep",8,[0,0,0.1]]],11]]],0,0,[0],[0],[0]],[[[1,"weiyan01",1,[{"rasterizerState":{"cullMode":0},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{"lightNoiseFlow":16,"intensity":0.89},"mainColorIn",8,[4,4294932992],"mainColorOut",8,[4,4294925312],"colorStep",8,[0,0,1],"lightNoiseTiling",8,[0,3,5],"lightNoiseStep",8,[0,0,1]]],11]]],0,0,[0],[0],[0]],[[[9,"../materials/flame",[{"hash":2579517013,"name":"../materials/flame|flame-vs:vert|flame-fs:frag","blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColorIn","type":16,"count":1},{"name":"mainColorOut","type":16,"count":1},{"name":"mainColorParams","type":16,"count":1},{"name":"lightNoiseParams","type":16,"count":1},{"name":"lightNoiseParams2","type":16,"count":1},{"name":"coreLightParams","type":16,"count":1},{"name":"controlParams","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["!USE_INSTANCING"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColorIn","type":16,"count":1},{"name":"mainColorOut","type":16,"count":1},{"name":"mainColorParams","type":16,"count":1},{"name":"lightNoiseParams","type":16,"count":1},{"name":"lightNoiseParams2","type":16,"count":1},{"name":"coreLightParams","type":16,"count":1},{"name":"controlParams","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n#endif\nuniform highp vec4 cc_time;\nuniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if !USE_INSTANCING\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));\n    vec3 scale2 = scale * scale;\n    matWorldIT = mat4(\n      vec4(a_matWorld0.xyz * scale2.x, 0.0),\n      vec4(a_matWorld1.xyz * scale2.y, 0.0),\n      vec4(a_matWorld2.xyz * scale2.z, 0.0),\n      vec4(0.0, 0.0, 0.0, 1.0)\n    );\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\nvec2 random2( vec2 p ) {\n    p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n    return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\nconst float F3 =  0.3333333;\nconst float G3 =  0.1666667;\nfloat noise2d( in vec2 p ) {\n    const float K1 = 0.366025404;\n    const float K2 = 0.211324865;\n    vec2 i = floor(p + (p.x+p.y)*K1);\n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + 2.0*K2;\n    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n    vec3 n = h*h*h*h*vec3( dot(a,random2(i+0.0)), dot(b,random2(i+o)), dot(c,random2(i+1.0)));\n    return dot(n, vec3(70.0));\n}\nvarying vec2 v_uv;\nvarying vec3 v_view;\nvarying vec3 v_normal;\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\nvec4 vert() {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  v_uv = a_texCoord;\n  float offset = noise2d(v_uv * vec2(5.0, 10.0) - 16.0 * cc_time.x) * 0.00125;\n  In.position.xyz += In.normal * offset;\n  In.position.x += v_uv.x * (noise2d(v_uv - 16.0 * cc_time.x) * 0.5 + 0.5) * 0.025;\n  vec4 worldPos = matWorld * In.position;\n  v_view = cc_cameraPos.xyz - worldPos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  return cc_matViewProj * worldPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform highp vec4 cc_time;\nvec2 random2( vec2 p ) {\n    p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n    return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\nconst float F3 =  0.3333333;\nconst float G3 =  0.1666667;\nfloat noise2d( in vec2 p ) {\n    const float K1 = 0.366025404;\n    const float K2 = 0.211324865;\n    vec2 i = floor(p + (p.x+p.y)*K1);\n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + 2.0*K2;\n    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n    vec3 n = h*h*h*h*vec3( dot(a,random2(i+0.0)), dot(b,random2(i+o)), dot(c,random2(i+1.0)));\n    return dot(n, vec3(70.0));\n}\nvarying vec2 v_uv;\nvarying vec3 v_view;\nvarying vec3 v_normal;\nuniform sampler2D mainTexture;\n   uniform vec4 mainColorIn;\n   uniform vec4 mainColorOut;\n   uniform vec4 mainColorParams;\n   uniform vec4 lightNoiseParams;\n   uniform vec4 lightNoiseParams2;\n   uniform vec4 coreLightParams;\n#define saturate(a) clamp(a, 0.0, 1.0)\n#define u_colorStep         mainColorParams.xy\n#define u_colorExp          mainColorParams.z\n#define u_lightNoiseTiling  lightNoiseParams.xy\n#define u_lightNoiseFlow    lightNoiseParams.z\n#define u_lightNoiseExp     lightNoiseParams.w\n#define u_lightNoiseStep    lightNoiseParams2.xy\n#define u_coreLightStep     coreLightParams.xy\n#define u_coreLightExp      coreLightParams.z\n#define u_fresnelPower      lightNoiseParams2.z\n#define u_fresnelExp        lightNoiseParams2.w\n#define u_intensity         coreLightParams.w\nvec4 frag () {\n  vec4  color = mix(mainColorOut, mainColorIn, smoothstep(u_colorStep.y, u_colorStep.x, v_uv.x));\n  float noise = noise2d(v_uv.xy * u_lightNoiseTiling - vec2(u_lightNoiseFlow * cc_time.x, 0.0)) * 0.5 + 0.5;;\n  noise *= smoothstep(u_lightNoiseStep.y, u_lightNoiseStep.x, v_uv.x);\n  noise = saturate(noise);\n  float core = smoothstep(u_coreLightStep.y, u_coreLightStep.x, v_uv.x);\n  core = saturate(core);\n  float alpha = saturate(noise + core);\n  vec3 f = vec3(-1.,0.,0.);\n  vec3 v = normalize(v_view);\n  vec3 n = normalize(v_normal);\n  float VoN = abs(dot(n, v));\n  alpha *= VoN;\n  alpha*=smoothstep(1.-u_intensity,1.,1.-v_uv.x);\n  color.rgb*=u_intensity;\n  return vec4(color.rgb * 3., alpha);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["!USE_INSTANCING"]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":49}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"}]}],[{"name":"opaque","passes":[{"program":"../materials/flame|flame-vs:vert|flame-fs:frag","properties":{"mainColorIn":{"type":16,"value":[1,1,1,1]},"mainColorOut":{"type":16,"value":[1,1,1,1]},"colorStep":{"type":14,"value":[0.1,0.4],"handleInfo":["mainColorParams",0,14]},"colorExp":{"type":13,"value":[1],"handleInfo":["mainColorParams",2,13]},"lightNoiseTiling":{"type":14,"value":[1,1],"handleInfo":["lightNoiseParams",0,14]},"lightNoiseFlow":{"type":13,"value":[1],"handleInfo":["lightNoiseParams",2,13]},"lightNoiseExp":{"type":13,"value":[1],"handleInfo":["lightNoiseParams",3,13]},"lightNoiseStep":{"type":14,"value":[0.5,0.9],"handleInfo":["lightNoiseParams2",0,14]},"coreLightStep":{"type":14,"value":[0.1,0.4],"handleInfo":["coreLightParams",0,14]},"coreLightExp":{"type":13,"value":[1],"handleInfo":["coreLightParams",2,13]},"fresnelPower":{"type":13,"value":[1],"handleInfo":["lightNoiseParams2",2,13]},"fresnelExp":{"type":13,"value":[1],"handleInfo":["lightNoiseParams2",3,13]},"intensity":{"type":13,"value":[1],"handleInfo":["coreLightParams",3,13]},"mainColorParams":{"type":16,"value":[0.1,0.4,1,0]},"lightNoiseParams":{"type":16,"value":[1,1,1,1]},"lightNoiseParams2":{"type":16,"value":[0.5,0.9,1,1]},"coreLightParams":{"type":16,"value":[0.1,0.4,1,1]}}}]},{"name":"transparent","passes":[{"program":"../materials/flame|flame-vs:vert|flame-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":1,"blendSrcAlpha":2,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainColorIn":{"type":16,"value":[1,1,1,1]},"mainColorOut":{"type":16,"value":[1,1,1,1]},"colorStep":{"type":14,"value":[0.1,0.4],"handleInfo":["mainColorParams",0,14]},"colorExp":{"type":13,"value":[1],"handleInfo":["mainColorParams",2,13]},"lightNoiseTiling":{"type":14,"value":[1,1],"handleInfo":["lightNoiseParams",0,14]},"lightNoiseFlow":{"type":13,"value":[1],"handleInfo":["lightNoiseParams",2,13]},"lightNoiseExp":{"type":13,"value":[1],"handleInfo":["lightNoiseParams",3,13]},"lightNoiseStep":{"type":14,"value":[0.5,0.9],"handleInfo":["lightNoiseParams2",0,14]},"coreLightStep":{"type":14,"value":[0.1,0.4],"handleInfo":["coreLightParams",0,14]},"coreLightExp":{"type":13,"value":[1],"handleInfo":["coreLightParams",2,13]},"fresnelPower":{"type":13,"value":[1],"handleInfo":["lightNoiseParams2",2,13]},"fresnelExp":{"type":13,"value":[1],"handleInfo":["lightNoiseParams2",3,13]},"intensity":{"type":13,"value":[1],"handleInfo":["coreLightParams",3,13]},"mainColorParams":{"type":16,"value":[0.1,0.4,1,0]},"lightNoiseParams":{"type":16,"value":[1,1,1,1]},"lightNoiseParams2":{"type":16,"value":[0.5,0.9,1,1]},"coreLightParams":{"type":16,"value":[0.1,0.4,1,1]}}}]}]]],0,0,[],[],[]]]]
